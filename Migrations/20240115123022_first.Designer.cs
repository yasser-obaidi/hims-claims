// <auto-generated />
using System;
using ClamManagement.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClaimManagement.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240115123022_first")]
    partial class first
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("NetworkProviderTPA", b =>
                {
                    b.Property<int>("NetworkProvidersId")
                        .HasColumnType("int");

                    b.Property<int>("TPAsId")
                        .HasColumnType("int");

                    b.HasKey("NetworkProvidersId", "TPAsId");

                    b.HasIndex("TPAsId");

                    b.ToTable("NetworkProviderTPA");
                });

            modelBuilder.Entity("Policy.Data.Entities.NetworkProvider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OfficialName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneLandLine")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RepresentativeEmail")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RepresentativeMobileNo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RepresentativeName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("NetworkProviders");
                });

            modelBuilder.Entity("Policy.Data.Entities.TPA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneLandLine")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RepresentativeEmail")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RepresentativeMobileNo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RepresentativeName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TPAs");
                });

            modelBuilder.Entity("NetworkProviderTPA", b =>
                {
                    b.HasOne("Policy.Data.Entities.NetworkProvider", null)
                        .WithMany()
                        .HasForeignKey("NetworkProvidersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Policy.Data.Entities.TPA", null)
                        .WithMany()
                        .HasForeignKey("TPAsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
